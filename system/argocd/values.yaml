argo-cd:
  global:
    domain: argocd.ncraig.dev

  configs:
    params:
      server.insecure: true
      controller.diff.server.side: true
    rbac:
      policy.csv: |
        g, cluster_admin, role:admin
        g, homepage, role:readonly
    cm:
      admin.enabled: false
      accounts.homepage: apiKey
      oidc.config: |
        name: "Authelia"
        issuer: "https://auth.ncraig.dev"
        clientID: hBv00QyLxfNEyJzRNcWEo0~SqdSCpyFRqhsuxw3HiYYTR2nhcD0diqQwI0U-ZbAI4fwMo3sG
        clientSecret: $oidc.client.secret
        cliClientId: f-O-AYy70~DoQkT0efZoQKvEBtGZpnXhpORu0hIhDfpJHDRgbwlCyR5kX3o3TKalBw4rbJ3R
        requestedScopes:
          - "openid"
          - "profile"
          - "email"
          - "groups"
        requestedIDTokenClaims:
          groups:
            essential: true

  secret:
    createSecret: false

  server:
    replicas: 1

    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/auth-method: "GET"
        nginx.ingress.kubernetes.io/auth-url: "http://authelia.authelia.svc.cluster.local/api/authz/auth-request"
        nginx.ingress.kubernetes.io/auth-signin: "https://auth.ncraig.dev?rm=$request_method"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
        cert-manager.io/cluster-issuer: letsencrypt-prod
        gethomepage.dev/enabled: "true"
        gethomepage.dev/group: Cluster Management
        gethomepage.dev/name: Argo CD
        gethomepage.dev/description: Continuous Deployment
        gethomepage.dev/icon: sh-argo-cd.svg
        gethomepage.dev/widget.type: argocd
        gethomepage.dev/widget.url: http://argocd-server.argocd.svc.cluster.local
        gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_ARGOCD_TOKEN}}"
      extraTls:
        - hosts:
            - argocd.ncraig.dev
          secretName: argocd-ncraig-dev-cert

    ingressGrpc:
      enabled: true
      ingressClassName: nginx
      annotations:
        nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
        cert-manager.io/cluster-issuer: letsencrypt-prod
      extraTls:
        - hosts:
            - grpc.argocd.ncraig.dev
          secretName: grpc-argocd-ncraig-dev-cert

  dex:
    enabled: false

argocd-apps:
  applicationsets:
    root:
      namespace: argocd
      goTemplate: true
      goTemplateOptions: ["missingkey=error"]
      generators:
        - git:
            repoURL: &repoURL https://github.com/Tyraeis/minilab
            revision: &revision main
            directories:
              - path: system/*
              - path: platform/*
              - path: apps/*
      template:
        metadata:
          name: "{{.path.basenameNormalized}}"
        spec:
          project: default
          source:
            repoURL: *repoURL
            targetRevision: *revision
            path: "{{.path.path}}"
          destination:
            name: in-cluster
            namespace: "{{.path.basename}}"
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            retry:
              limit: 10
              backoff:
                duration: 5s
                factor: 2
                maxDuration: 3m
            syncOptions:
              - CreateNamespace=true
              - ApplyOutOfSyncOnly=true
              - ServerSideApply=true
