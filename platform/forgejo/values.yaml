forgejo:
  persistence:
    enabled: true
    storageClass: longhorn
  strategy:
    type: Recreate

  ingress:
    enabled: true
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Services
      gethomepage.dev/name: Forgejo
      gethomepage.dev/description: Git Server
      gethomepage.dev/icon: sh-forgejo.svg
    hosts:
      - host: &host git.ncraig.dev
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: git-ncraig-dev-cert
        hosts:
          - *host

  gitea:
    admin:
      existingSecret: forgejo-admin-secret

    config:
      server:
        DOMAIN: git.ncraig.dev
        ROOT_URL: https://git.ncraig.dev
        OFFLINE_MODE: true
      service:
        REQUIRE_SIGNIN_VIEW: true
        ENABLE_INTERNAL_SIGNIN: false
        ALLOW_ONLY_EXTERNAL_REGISTRATION: true
      repository:
        DISABLED_REPO_UNITS: repo.wiki,repo.projects
        DISABLE_STARS: true
      webhook:
        ALLOWED_HOST_LIST: private,external
      security:
        LOGIN_REMEMBER_DAYS: 365

      queue:
        TYPE: &cache_type redis
      session:
        PROVIDER: *cache_type
      cache:
        ENABLED: true
        ADAPTER: *cache_type

    additionalConfigFromEnvs:
      - name: FORGEJO__QUEUE__CONN_STR
        valueFrom: &valkey_conn_str
          secretKeyRef:
            name: valkey-secret
            key: valkey-connection-str
      - name: FORGEJO__SESSION__PROVIDER_CONFIG
        valueFrom: *valkey_conn_str
      - name: FORGEJO__CACHE__HOST
        valueFrom: *valkey_conn_str

    oauth:
      - name: kanidm
        provider: openidConnect
        autoDiscoverUrl: https://sso.ncraig.dev/oauth2/openid/forgejo/.well-known/openid-configuration
        existingSecret: forgejo-oauth-secret
        scopes: "openid profile email groups"
        groupClaimName: groups
        adminGroup: forgejo_admins@sso.ncraig.dev

  redis-cluster:
    enabled: false
  redis:
    enabled: false

  postgresql-ha:
    enabled: false
  postgresql:
    enabled: true

valkey:
  architecture: standalone
  auth:
    existingSecret: valkey-secret
    existingSecretPasswordKey: valkey-password
