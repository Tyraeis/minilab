version: v1alpha1 # Indicates the schema used to decode the contents.
debug: false # Enable verbose logging to the console.
persist: true
# Provides machine specific configuration options.
machine:
  type: worker # Defines the role of the machine within the cluster.
  token: "{{ trustdinfo.token }}" # The `token` is used by a machine to join the PKI of the cluster.
  # The root certificate authority of the PKI.
  ca:
    crt: "{{ certs.os.crt }}"
    key: ""
  # Extra certificate subject alternative names for the machine's certificate.
  certSANs: []

  # Used to provide additional options to the kubelet.
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.33.3 # The `image` field is an optional reference to an alternative kubelet image.
    defaultRuntimeSeccompProfileEnabled: true # Enable container runtime default Seccomp profile.
    disableManifestsDirectory: true # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
    extraArgs:
      rotate-server-certificates: true # enable certificate rotation (for Metrics Server)
    nodeIP:
      validSubnets:
      - "{{ ip }}/32"

  # Provides machine specific network configuration options.
  network:
    hostname: "{{ hostname }}"
    interfaces:
    - deviceSelector:
        physical: true
      addresses:
      - "{{ ip }}{{ lan_cidr_suffix }}"

  # Used to provide instructions for installations.
  install:
    image: factory.talos.dev/metal-installer/{{ image_factory_id }}:v{{ talos_version }}
    diskSelector:
      type: nvme
    wipe: false # Indicates if the installation disk should be wiped at installation time.

  # Used to configure the machine's container image registry mirrors.
  registries: {}

  # Features describe individual Talos features that can be switched on or off.
  features:
    rbac: true # Enable role-based access control (RBAC).
    stableHostname: true # Enable stable default hostname.
    apidCheckExtKeyUsage: true # Enable checks for extended key usage of client certificates in apid.
    diskQuotaSupport: true # Enable XFS project quota support for EPHEMERAL partition and user disks.
    # KubePrism - local proxy/load balancer on defined port that will distribute
    kubePrism:
      enabled: true # Enable KubePrism support - will start local load balancing proxy.
      port: 7445 # KubePrism port.
    # Configures host DNS caching resolver.
    hostDNS:
      enabled: true # Enable host DNS caching resolver.
      forwardKubeDNSToHost: true # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.

# Provides cluster specific configuration options.
cluster:
  id: "{{ cluster.id }}" # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
  secret: "{{ cluster.secret }}" # Shared secret of cluster (base64 encoded random 32 bytes).
  # Provides control plane specific configuration options.
  controlPlane:
    endpoint: "{{ cluster_endpoint }}" # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
  clusterName: "{{ cluster_name }}" # Configures the cluster's name.
  # Provides cluster specific network configuration options.
  network:
    dnsDomain: cluster.local # The domain used by Kubernetes DNS.
    # The pod subnet CIDR.
    podSubnets:
    - 10.244.0.0/16
    # The service subnet CIDR.
    serviceSubnets:
    - 10.96.0.0/12

  token: "{{ secrets.bootstraptoken }}" # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
  # The base64 encoded root certificate authority used by Kubernetes.
  ca:
    crt: "{{ certs.k8s.crt }}"
    key: ""
  discovery:
    enabled: true # Enable the cluster membership discovery feature.
    # Configure registries used for cluster member discovery.
    registries:
      # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
      kubernetes:
        disabled: true # Disable Kubernetes discovery registry.
      # Service registry is using an external service to push and pull information about cluster members.
      service: {}
      # # External service endpoint.
      # endpoint: https://discovery.talos.dev/
      # Etcd specific configuration options.

  # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).

  # # Decryption secret example (do not use in production!).
  # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
